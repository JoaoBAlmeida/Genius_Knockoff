// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/29/2021 18:28:11"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    genius_knockoff
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module genius_knockoff_vlg_sample_tst(
	btn0,
	btn1,
	btn2,
	btn3,
	clk,
	rst,
	sampler_tx
);
input  btn0;
input  btn1;
input  btn2;
input  btn3;
input  clk;
input  rst;
output sampler_tx;

reg sample;
time current_time;
always @(btn0 or btn1 or btn2 or btn3 or clk or rst)
                                                                                
begin                                                 
 if ($realtime > 0)                                   
 begin                                                
	if ($realtime == 0 || $realtime != current_time)  
	begin									          
		if (sample === 1'bx)                          
			sample = 0;                               
		else                                          
			sample = ~sample;                         
	end										          
	current_time = $realtime;					      
 end                                                  
end                                                   

assign sampler_tx = sample;
endmodule

module genius_knockoff_vlg_check_tst (
	arrayed_0_2,
	arrayed_0_1,
	arrayed_0_0,
	arrayed_1_2,
	arrayed_1_1,
	arrayed_1_0,
	arrayed_2_2,
	arrayed_2_1,
	arrayed_2_0,
	arrayed_3_2,
	arrayed_3_1,
	arrayed_3_0,
	arrayed_4_2,
	arrayed_4_1,
	arrayed_4_0,
	arrayed_5_2,
	arrayed_5_1,
	arrayed_5_0,
	arrayed_6_2,
	arrayed_6_1,
	arrayed_6_0,
	arrayed_7_2,
	arrayed_7_1,
	arrayed_7_0,
	arrayed_8_2,
	arrayed_8_1,
	arrayed_8_0,
	arrayed_9_2,
	arrayed_9_1,
	arrayed_9_0,
	arrayed_10_2,
	arrayed_10_1,
	arrayed_10_0,
	arrayed_11_2,
	arrayed_11_1,
	arrayed_11_0,
	arrayed_12_2,
	arrayed_12_1,
	arrayed_12_0,
	arrayed_13_2,
	arrayed_13_1,
	arrayed_13_0,
	arrayed_14_2,
	arrayed_14_1,
	arrayed_14_0,
	arrayed_15_2,
	arrayed_15_1,
	arrayed_15_0,
	arrayed_16_2,
	arrayed_16_1,
	arrayed_16_0,
	arrayed_17_2,
	arrayed_17_1,
	arrayed_17_0,
	arrayed_18_2,
	arrayed_18_1,
	arrayed_18_0,
	arrayed_19_2,
	arrayed_19_1,
	arrayed_19_0,
	arrayed_20_2,
	arrayed_20_1,
	arrayed_20_0,
	arrayed_21_2,
	arrayed_21_1,
	arrayed_21_0,
	arrayed_22_2,
	arrayed_22_1,
	arrayed_22_0,
	arrayed_23_2,
	arrayed_23_1,
	arrayed_23_0,
	arrayed_24_2,
	arrayed_24_1,
	arrayed_24_0,
	led0,
	led1,
	led2,
	led3,
	sampler_rx
);
input  arrayed_0_2;
input  arrayed_0_1;
input  arrayed_0_0;
input  arrayed_1_2;
input  arrayed_1_1;
input  arrayed_1_0;
input  arrayed_2_2;
input  arrayed_2_1;
input  arrayed_2_0;
input  arrayed_3_2;
input  arrayed_3_1;
input  arrayed_3_0;
input  arrayed_4_2;
input  arrayed_4_1;
input  arrayed_4_0;
input  arrayed_5_2;
input  arrayed_5_1;
input  arrayed_5_0;
input  arrayed_6_2;
input  arrayed_6_1;
input  arrayed_6_0;
input  arrayed_7_2;
input  arrayed_7_1;
input  arrayed_7_0;
input  arrayed_8_2;
input  arrayed_8_1;
input  arrayed_8_0;
input  arrayed_9_2;
input  arrayed_9_1;
input  arrayed_9_0;
input  arrayed_10_2;
input  arrayed_10_1;
input  arrayed_10_0;
input  arrayed_11_2;
input  arrayed_11_1;
input  arrayed_11_0;
input  arrayed_12_2;
input  arrayed_12_1;
input  arrayed_12_0;
input  arrayed_13_2;
input  arrayed_13_1;
input  arrayed_13_0;
input  arrayed_14_2;
input  arrayed_14_1;
input  arrayed_14_0;
input  arrayed_15_2;
input  arrayed_15_1;
input  arrayed_15_0;
input  arrayed_16_2;
input  arrayed_16_1;
input  arrayed_16_0;
input  arrayed_17_2;
input  arrayed_17_1;
input  arrayed_17_0;
input  arrayed_18_2;
input  arrayed_18_1;
input  arrayed_18_0;
input  arrayed_19_2;
input  arrayed_19_1;
input  arrayed_19_0;
input  arrayed_20_2;
input  arrayed_20_1;
input  arrayed_20_0;
input  arrayed_21_2;
input  arrayed_21_1;
input  arrayed_21_0;
input  arrayed_22_2;
input  arrayed_22_1;
input  arrayed_22_0;
input  arrayed_23_2;
input  arrayed_23_1;
input  arrayed_23_0;
input  arrayed_24_2;
input  arrayed_24_1;
input  arrayed_24_0;
input  led0;
input  led1;
input  led2;
input  led3;
input sampler_rx;

reg  arrayed_0_2_expected;
reg  arrayed_0_1_expected;
reg  arrayed_0_0_expected;
reg  arrayed_1_2_expected;
reg  arrayed_1_1_expected;
reg  arrayed_1_0_expected;
reg  arrayed_2_2_expected;
reg  arrayed_2_1_expected;
reg  arrayed_2_0_expected;
reg  arrayed_3_2_expected;
reg  arrayed_3_1_expected;
reg  arrayed_3_0_expected;
reg  arrayed_4_2_expected;
reg  arrayed_4_1_expected;
reg  arrayed_4_0_expected;
reg  arrayed_5_2_expected;
reg  arrayed_5_1_expected;
reg  arrayed_5_0_expected;
reg  arrayed_6_2_expected;
reg  arrayed_6_1_expected;
reg  arrayed_6_0_expected;
reg  arrayed_7_2_expected;
reg  arrayed_7_1_expected;
reg  arrayed_7_0_expected;
reg  arrayed_8_2_expected;
reg  arrayed_8_1_expected;
reg  arrayed_8_0_expected;
reg  arrayed_9_2_expected;
reg  arrayed_9_1_expected;
reg  arrayed_9_0_expected;
reg  arrayed_10_2_expected;
reg  arrayed_10_1_expected;
reg  arrayed_10_0_expected;
reg  arrayed_11_2_expected;
reg  arrayed_11_1_expected;
reg  arrayed_11_0_expected;
reg  arrayed_12_2_expected;
reg  arrayed_12_1_expected;
reg  arrayed_12_0_expected;
reg  arrayed_13_2_expected;
reg  arrayed_13_1_expected;
reg  arrayed_13_0_expected;
reg  arrayed_14_2_expected;
reg  arrayed_14_1_expected;
reg  arrayed_14_0_expected;
reg  arrayed_15_2_expected;
reg  arrayed_15_1_expected;
reg  arrayed_15_0_expected;
reg  arrayed_16_2_expected;
reg  arrayed_16_1_expected;
reg  arrayed_16_0_expected;
reg  arrayed_17_2_expected;
reg  arrayed_17_1_expected;
reg  arrayed_17_0_expected;
reg  arrayed_18_2_expected;
reg  arrayed_18_1_expected;
reg  arrayed_18_0_expected;
reg  arrayed_19_2_expected;
reg  arrayed_19_1_expected;
reg  arrayed_19_0_expected;
reg  arrayed_20_2_expected;
reg  arrayed_20_1_expected;
reg  arrayed_20_0_expected;
reg  arrayed_21_2_expected;
reg  arrayed_21_1_expected;
reg  arrayed_21_0_expected;
reg  arrayed_22_2_expected;
reg  arrayed_22_1_expected;
reg  arrayed_22_0_expected;
reg  arrayed_23_2_expected;
reg  arrayed_23_1_expected;
reg  arrayed_23_0_expected;
reg  arrayed_24_2_expected;
reg  arrayed_24_1_expected;
reg  arrayed_24_0_expected;
reg  led0_expected;
reg  led1_expected;
reg  led2_expected;
reg  led3_expected;

reg  arrayed_0_2_prev;
reg  arrayed_0_1_prev;
reg  arrayed_0_0_prev;
reg  arrayed_1_2_prev;
reg  arrayed_1_1_prev;
reg  arrayed_1_0_prev;
reg  arrayed_2_2_prev;
reg  arrayed_2_1_prev;
reg  arrayed_2_0_prev;
reg  arrayed_3_2_prev;
reg  arrayed_3_1_prev;
reg  arrayed_3_0_prev;
reg  arrayed_4_2_prev;
reg  arrayed_4_1_prev;
reg  arrayed_4_0_prev;
reg  arrayed_5_2_prev;
reg  arrayed_5_1_prev;
reg  arrayed_5_0_prev;
reg  arrayed_6_2_prev;
reg  arrayed_6_1_prev;
reg  arrayed_6_0_prev;
reg  arrayed_7_2_prev;
reg  arrayed_7_1_prev;
reg  arrayed_7_0_prev;
reg  arrayed_8_2_prev;
reg  arrayed_8_1_prev;
reg  arrayed_8_0_prev;
reg  arrayed_9_2_prev;
reg  arrayed_9_1_prev;
reg  arrayed_9_0_prev;
reg  arrayed_10_2_prev;
reg  arrayed_10_1_prev;
reg  arrayed_10_0_prev;
reg  arrayed_11_2_prev;
reg  arrayed_11_1_prev;
reg  arrayed_11_0_prev;
reg  arrayed_12_2_prev;
reg  arrayed_12_1_prev;
reg  arrayed_12_0_prev;
reg  arrayed_13_2_prev;
reg  arrayed_13_1_prev;
reg  arrayed_13_0_prev;
reg  arrayed_14_2_prev;
reg  arrayed_14_1_prev;
reg  arrayed_14_0_prev;
reg  arrayed_15_2_prev;
reg  arrayed_15_1_prev;
reg  arrayed_15_0_prev;
reg  arrayed_16_2_prev;
reg  arrayed_16_1_prev;
reg  arrayed_16_0_prev;
reg  arrayed_17_2_prev;
reg  arrayed_17_1_prev;
reg  arrayed_17_0_prev;
reg  arrayed_18_2_prev;
reg  arrayed_18_1_prev;
reg  arrayed_18_0_prev;
reg  arrayed_19_2_prev;
reg  arrayed_19_1_prev;
reg  arrayed_19_0_prev;
reg  arrayed_20_2_prev;
reg  arrayed_20_1_prev;
reg  arrayed_20_0_prev;
reg  arrayed_21_2_prev;
reg  arrayed_21_1_prev;
reg  arrayed_21_0_prev;
reg  arrayed_22_2_prev;
reg  arrayed_22_1_prev;
reg  arrayed_22_0_prev;
reg  arrayed_23_2_prev;
reg  arrayed_23_1_prev;
reg  arrayed_23_0_prev;
reg  arrayed_24_2_prev;
reg  arrayed_24_1_prev;
reg  arrayed_24_0_prev;
reg  led0_prev;
reg  led1_prev;
reg  led2_prev;
reg  led3_prev;

reg  led0_expected_prev;
reg  led1_expected_prev;
reg  led2_expected_prev;
reg  led3_expected_prev;

reg  last_led0_exp;
reg  last_led1_exp;
reg  last_led2_exp;
reg  last_led3_exp;

reg trigger;

integer i;
integer nummismatches;

reg [1:79] on_first_change ;


initial
begin
trigger = 0;
i = 0;
nummismatches = 0;
on_first_change = 79'b1;
end

// update real /o prevs

always @(trigger)
begin
	arrayed_0_2_prev = arrayed_0_2;
	arrayed_0_1_prev = arrayed_0_1;
	arrayed_0_0_prev = arrayed_0_0;
	arrayed_1_2_prev = arrayed_1_2;
	arrayed_1_1_prev = arrayed_1_1;
	arrayed_1_0_prev = arrayed_1_0;
	arrayed_2_2_prev = arrayed_2_2;
	arrayed_2_1_prev = arrayed_2_1;
	arrayed_2_0_prev = arrayed_2_0;
	arrayed_3_2_prev = arrayed_3_2;
	arrayed_3_1_prev = arrayed_3_1;
	arrayed_3_0_prev = arrayed_3_0;
	arrayed_4_2_prev = arrayed_4_2;
	arrayed_4_1_prev = arrayed_4_1;
	arrayed_4_0_prev = arrayed_4_0;
	arrayed_5_2_prev = arrayed_5_2;
	arrayed_5_1_prev = arrayed_5_1;
	arrayed_5_0_prev = arrayed_5_0;
	arrayed_6_2_prev = arrayed_6_2;
	arrayed_6_1_prev = arrayed_6_1;
	arrayed_6_0_prev = arrayed_6_0;
	arrayed_7_2_prev = arrayed_7_2;
	arrayed_7_1_prev = arrayed_7_1;
	arrayed_7_0_prev = arrayed_7_0;
	arrayed_8_2_prev = arrayed_8_2;
	arrayed_8_1_prev = arrayed_8_1;
	arrayed_8_0_prev = arrayed_8_0;
	arrayed_9_2_prev = arrayed_9_2;
	arrayed_9_1_prev = arrayed_9_1;
	arrayed_9_0_prev = arrayed_9_0;
	arrayed_10_2_prev = arrayed_10_2;
	arrayed_10_1_prev = arrayed_10_1;
	arrayed_10_0_prev = arrayed_10_0;
	arrayed_11_2_prev = arrayed_11_2;
	arrayed_11_1_prev = arrayed_11_1;
	arrayed_11_0_prev = arrayed_11_0;
	arrayed_12_2_prev = arrayed_12_2;
	arrayed_12_1_prev = arrayed_12_1;
	arrayed_12_0_prev = arrayed_12_0;
	arrayed_13_2_prev = arrayed_13_2;
	arrayed_13_1_prev = arrayed_13_1;
	arrayed_13_0_prev = arrayed_13_0;
	arrayed_14_2_prev = arrayed_14_2;
	arrayed_14_1_prev = arrayed_14_1;
	arrayed_14_0_prev = arrayed_14_0;
	arrayed_15_2_prev = arrayed_15_2;
	arrayed_15_1_prev = arrayed_15_1;
	arrayed_15_0_prev = arrayed_15_0;
	arrayed_16_2_prev = arrayed_16_2;
	arrayed_16_1_prev = arrayed_16_1;
	arrayed_16_0_prev = arrayed_16_0;
	arrayed_17_2_prev = arrayed_17_2;
	arrayed_17_1_prev = arrayed_17_1;
	arrayed_17_0_prev = arrayed_17_0;
	arrayed_18_2_prev = arrayed_18_2;
	arrayed_18_1_prev = arrayed_18_1;
	arrayed_18_0_prev = arrayed_18_0;
	arrayed_19_2_prev = arrayed_19_2;
	arrayed_19_1_prev = arrayed_19_1;
	arrayed_19_0_prev = arrayed_19_0;
	arrayed_20_2_prev = arrayed_20_2;
	arrayed_20_1_prev = arrayed_20_1;
	arrayed_20_0_prev = arrayed_20_0;
	arrayed_21_2_prev = arrayed_21_2;
	arrayed_21_1_prev = arrayed_21_1;
	arrayed_21_0_prev = arrayed_21_0;
	arrayed_22_2_prev = arrayed_22_2;
	arrayed_22_1_prev = arrayed_22_1;
	arrayed_22_0_prev = arrayed_22_0;
	arrayed_23_2_prev = arrayed_23_2;
	arrayed_23_1_prev = arrayed_23_1;
	arrayed_23_0_prev = arrayed_23_0;
	arrayed_24_2_prev = arrayed_24_2;
	arrayed_24_1_prev = arrayed_24_1;
	arrayed_24_0_prev = arrayed_24_0;
	led0_prev = led0;
	led1_prev = led1;
	led2_prev = led2;
	led3_prev = led3;
end

// update expected /o prevs

always @(trigger)
begin
	led0_expected_prev = led0_expected;
	led1_expected_prev = led1_expected;
	led2_expected_prev = led2_expected;
	led3_expected_prev = led3_expected;
end



// expected led0
initial
begin
	led0_expected = 1'bX;
	led0_expected = #79000 1'b0;
	led0_expected = #1000 1'bX;
end 

// expected led1
initial
begin
	led1_expected = 1'bX;
	led1_expected = #79000 1'b0;
	led1_expected = #1000 1'bX;
end 

// expected led2
initial
begin
	led2_expected = 1'bX;
	led2_expected = #79000 1'b0;
	led2_expected = #1000 1'bX;
end 

// expected led3
initial
begin
	led3_expected = 1'bX;
	led3_expected = #79000 1'b0;
	led3_expected = #1000 1'bX;
end 
// generate trigger
always @(arrayed_0_2_expected or arrayed_0_2 or arrayed_0_1_expected or arrayed_0_1 or arrayed_0_0_expected or arrayed_0_0 or arrayed_1_2_expected or arrayed_1_2 or arrayed_1_1_expected or arrayed_1_1 or arrayed_1_0_expected or arrayed_1_0 or arrayed_2_2_expected or arrayed_2_2 or arrayed_2_1_expected or arrayed_2_1 or arrayed_2_0_expected or arrayed_2_0 or arrayed_3_2_expected or arrayed_3_2 or arrayed_3_1_expected or arrayed_3_1 or arrayed_3_0_expected or arrayed_3_0 or arrayed_4_2_expected or arrayed_4_2 or arrayed_4_1_expected or arrayed_4_1 or arrayed_4_0_expected or arrayed_4_0 or arrayed_5_2_expected or arrayed_5_2 or arrayed_5_1_expected or arrayed_5_1 or arrayed_5_0_expected or arrayed_5_0 or arrayed_6_2_expected or arrayed_6_2 or arrayed_6_1_expected or arrayed_6_1 or arrayed_6_0_expected or arrayed_6_0 or arrayed_7_2_expected or arrayed_7_2 or arrayed_7_1_expected or arrayed_7_1 or arrayed_7_0_expected or arrayed_7_0 or arrayed_8_2_expected or arrayed_8_2 or arrayed_8_1_expected or arrayed_8_1 or arrayed_8_0_expected or arrayed_8_0 or arrayed_9_2_expected or arrayed_9_2 or arrayed_9_1_expected or arrayed_9_1 or arrayed_9_0_expected or arrayed_9_0 or arrayed_10_2_expected or arrayed_10_2 or arrayed_10_1_expected or arrayed_10_1 or arrayed_10_0_expected or arrayed_10_0 or arrayed_11_2_expected or arrayed_11_2 or arrayed_11_1_expected or arrayed_11_1 or arrayed_11_0_expected or arrayed_11_0 or arrayed_12_2_expected or arrayed_12_2 or arrayed_12_1_expected or arrayed_12_1 or arrayed_12_0_expected or arrayed_12_0 or arrayed_13_2_expected or arrayed_13_2 or arrayed_13_1_expected or arrayed_13_1 or arrayed_13_0_expected or arrayed_13_0 or arrayed_14_2_expected or arrayed_14_2 or arrayed_14_1_expected or arrayed_14_1 or arrayed_14_0_expected or arrayed_14_0 or arrayed_15_2_expected or arrayed_15_2 or arrayed_15_1_expected or arrayed_15_1 or arrayed_15_0_expected or arrayed_15_0 or arrayed_16_2_expected or arrayed_16_2 or arrayed_16_1_expected or arrayed_16_1 or arrayed_16_0_expected or arrayed_16_0 or arrayed_17_2_expected or arrayed_17_2 or arrayed_17_1_expected or arrayed_17_1 or arrayed_17_0_expected or arrayed_17_0 or arrayed_18_2_expected or arrayed_18_2 or arrayed_18_1_expected or arrayed_18_1 or arrayed_18_0_expected or arrayed_18_0 or arrayed_19_2_expected or arrayed_19_2 or arrayed_19_1_expected or arrayed_19_1 or arrayed_19_0_expected or arrayed_19_0 or arrayed_20_2_expected or arrayed_20_2 or arrayed_20_1_expected or arrayed_20_1 or arrayed_20_0_expected or arrayed_20_0 or arrayed_21_2_expected or arrayed_21_2 or arrayed_21_1_expected or arrayed_21_1 or arrayed_21_0_expected or arrayed_21_0 or arrayed_22_2_expected or arrayed_22_2 or arrayed_22_1_expected or arrayed_22_1 or arrayed_22_0_expected or arrayed_22_0 or arrayed_23_2_expected or arrayed_23_2 or arrayed_23_1_expected or arrayed_23_1 or arrayed_23_0_expected or arrayed_23_0 or arrayed_24_2_expected or arrayed_24_2 or arrayed_24_1_expected or arrayed_24_1 or arrayed_24_0_expected or arrayed_24_0 or led0_expected or led0 or led1_expected or led1 or led2_expected or led2 or led3_expected or led3)
begin
	trigger <= ~trigger;
end

always @(posedge sampler_rx or negedge sampler_rx)
begin
`ifdef debug_tbench
	$display("Scanning pattern %d @time = %t",i,$realtime );
	i = i + 1;
	$display("| expected arrayed_0_2 = %b | expected arrayed_0_1 = %b | expected arrayed_0_0 = %b | expected arrayed_1_2 = %b | expected arrayed_1_1 = %b | expected arrayed_1_0 = %b | expected arrayed_2_2 = %b | expected arrayed_2_1 = %b | expected arrayed_2_0 = %b | expected arrayed_3_2 = %b | expected arrayed_3_1 = %b | expected arrayed_3_0 = %b | expected arrayed_4_2 = %b | expected arrayed_4_1 = %b | expected arrayed_4_0 = %b | expected arrayed_5_2 = %b | expected arrayed_5_1 = %b | expected arrayed_5_0 = %b | expected arrayed_6_2 = %b | expected arrayed_6_1 = %b | expected arrayed_6_0 = %b | expected arrayed_7_2 = %b | expected arrayed_7_1 = %b | expected arrayed_7_0 = %b | expected arrayed_8_2 = %b | expected arrayed_8_1 = %b | expected arrayed_8_0 = %b | expected arrayed_9_2 = %b | expected arrayed_9_1 = %b | expected arrayed_9_0 = %b | expected arrayed_10_2 = %b | expected arrayed_10_1 = %b | expected arrayed_10_0 = %b | expected arrayed_11_2 = %b | expected arrayed_11_1 = %b | expected arrayed_11_0 = %b | expected arrayed_12_2 = %b | expected arrayed_12_1 = %b | expected arrayed_12_0 = %b | expected arrayed_13_2 = %b | expected arrayed_13_1 = %b | expected arrayed_13_0 = %b | expected arrayed_14_2 = %b | expected arrayed_14_1 = %b | expected arrayed_14_0 = %b | expected arrayed_15_2 = %b | expected arrayed_15_1 = %b | expected arrayed_15_0 = %b | expected arrayed_16_2 = %b | expected arrayed_16_1 = %b | expected arrayed_16_0 = %b | expected arrayed_17_2 = %b | expected arrayed_17_1 = %b | expected arrayed_17_0 = %b | expected arrayed_18_2 = %b | expected arrayed_18_1 = %b | expected arrayed_18_0 = %b | expected arrayed_19_2 = %b | expected arrayed_19_1 = %b | expected arrayed_19_0 = %b | expected arrayed_20_2 = %b | expected arrayed_20_1 = %b | expected arrayed_20_0 = %b | expected arrayed_21_2 = %b | expected arrayed_21_1 = %b | expected arrayed_21_0 = %b | expected arrayed_22_2 = %b | expected arrayed_22_1 = %b | expected arrayed_22_0 = %b | expected arrayed_23_2 = %b | expected arrayed_23_1 = %b | expected arrayed_23_0 = %b | expected arrayed_24_2 = %b | expected arrayed_24_1 = %b | expected arrayed_24_0 = %b | expected led0 = %b | expected led1 = %b | expected led2 = %b | expected led3 = %b | ",arrayed_0_2_expected_prev,arrayed_0_1_expected_prev,arrayed_0_0_expected_prev,arrayed_1_2_expected_prev,arrayed_1_1_expected_prev,arrayed_1_0_expected_prev,arrayed_2_2_expected_prev,arrayed_2_1_expected_prev,arrayed_2_0_expected_prev,arrayed_3_2_expected_prev,arrayed_3_1_expected_prev,arrayed_3_0_expected_prev,arrayed_4_2_expected_prev,arrayed_4_1_expected_prev,arrayed_4_0_expected_prev,arrayed_5_2_expected_prev,arrayed_5_1_expected_prev,arrayed_5_0_expected_prev,arrayed_6_2_expected_prev,arrayed_6_1_expected_prev,arrayed_6_0_expected_prev,arrayed_7_2_expected_prev,arrayed_7_1_expected_prev,arrayed_7_0_expected_prev,arrayed_8_2_expected_prev,arrayed_8_1_expected_prev,arrayed_8_0_expected_prev,arrayed_9_2_expected_prev,arrayed_9_1_expected_prev,arrayed_9_0_expected_prev,arrayed_10_2_expected_prev,arrayed_10_1_expected_prev,arrayed_10_0_expected_prev,arrayed_11_2_expected_prev,arrayed_11_1_expected_prev,arrayed_11_0_expected_prev,arrayed_12_2_expected_prev,arrayed_12_1_expected_prev,arrayed_12_0_expected_prev,arrayed_13_2_expected_prev,arrayed_13_1_expected_prev,arrayed_13_0_expected_prev,arrayed_14_2_expected_prev,arrayed_14_1_expected_prev,arrayed_14_0_expected_prev,arrayed_15_2_expected_prev,arrayed_15_1_expected_prev,arrayed_15_0_expected_prev,arrayed_16_2_expected_prev,arrayed_16_1_expected_prev,arrayed_16_0_expected_prev,arrayed_17_2_expected_prev,arrayed_17_1_expected_prev,arrayed_17_0_expected_prev,arrayed_18_2_expected_prev,arrayed_18_1_expected_prev,arrayed_18_0_expected_prev,arrayed_19_2_expected_prev,arrayed_19_1_expected_prev,arrayed_19_0_expected_prev,arrayed_20_2_expected_prev,arrayed_20_1_expected_prev,arrayed_20_0_expected_prev,arrayed_21_2_expected_prev,arrayed_21_1_expected_prev,arrayed_21_0_expected_prev,arrayed_22_2_expected_prev,arrayed_22_1_expected_prev,arrayed_22_0_expected_prev,arrayed_23_2_expected_prev,arrayed_23_1_expected_prev,arrayed_23_0_expected_prev,arrayed_24_2_expected_prev,arrayed_24_1_expected_prev,arrayed_24_0_expected_prev,led0_expected_prev,led1_expected_prev,led2_expected_prev,led3_expected_prev);
	$display("| real arrayed_0_2 = %b | real arrayed_0_1 = %b | real arrayed_0_0 = %b | real arrayed_1_2 = %b | real arrayed_1_1 = %b | real arrayed_1_0 = %b | real arrayed_2_2 = %b | real arrayed_2_1 = %b | real arrayed_2_0 = %b | real arrayed_3_2 = %b | real arrayed_3_1 = %b | real arrayed_3_0 = %b | real arrayed_4_2 = %b | real arrayed_4_1 = %b | real arrayed_4_0 = %b | real arrayed_5_2 = %b | real arrayed_5_1 = %b | real arrayed_5_0 = %b | real arrayed_6_2 = %b | real arrayed_6_1 = %b | real arrayed_6_0 = %b | real arrayed_7_2 = %b | real arrayed_7_1 = %b | real arrayed_7_0 = %b | real arrayed_8_2 = %b | real arrayed_8_1 = %b | real arrayed_8_0 = %b | real arrayed_9_2 = %b | real arrayed_9_1 = %b | real arrayed_9_0 = %b | real arrayed_10_2 = %b | real arrayed_10_1 = %b | real arrayed_10_0 = %b | real arrayed_11_2 = %b | real arrayed_11_1 = %b | real arrayed_11_0 = %b | real arrayed_12_2 = %b | real arrayed_12_1 = %b | real arrayed_12_0 = %b | real arrayed_13_2 = %b | real arrayed_13_1 = %b | real arrayed_13_0 = %b | real arrayed_14_2 = %b | real arrayed_14_1 = %b | real arrayed_14_0 = %b | real arrayed_15_2 = %b | real arrayed_15_1 = %b | real arrayed_15_0 = %b | real arrayed_16_2 = %b | real arrayed_16_1 = %b | real arrayed_16_0 = %b | real arrayed_17_2 = %b | real arrayed_17_1 = %b | real arrayed_17_0 = %b | real arrayed_18_2 = %b | real arrayed_18_1 = %b | real arrayed_18_0 = %b | real arrayed_19_2 = %b | real arrayed_19_1 = %b | real arrayed_19_0 = %b | real arrayed_20_2 = %b | real arrayed_20_1 = %b | real arrayed_20_0 = %b | real arrayed_21_2 = %b | real arrayed_21_1 = %b | real arrayed_21_0 = %b | real arrayed_22_2 = %b | real arrayed_22_1 = %b | real arrayed_22_0 = %b | real arrayed_23_2 = %b | real arrayed_23_1 = %b | real arrayed_23_0 = %b | real arrayed_24_2 = %b | real arrayed_24_1 = %b | real arrayed_24_0 = %b | real led0 = %b | real led1 = %b | real led2 = %b | real led3 = %b | ",arrayed_0_2_prev,arrayed_0_1_prev,arrayed_0_0_prev,arrayed_1_2_prev,arrayed_1_1_prev,arrayed_1_0_prev,arrayed_2_2_prev,arrayed_2_1_prev,arrayed_2_0_prev,arrayed_3_2_prev,arrayed_3_1_prev,arrayed_3_0_prev,arrayed_4_2_prev,arrayed_4_1_prev,arrayed_4_0_prev,arrayed_5_2_prev,arrayed_5_1_prev,arrayed_5_0_prev,arrayed_6_2_prev,arrayed_6_1_prev,arrayed_6_0_prev,arrayed_7_2_prev,arrayed_7_1_prev,arrayed_7_0_prev,arrayed_8_2_prev,arrayed_8_1_prev,arrayed_8_0_prev,arrayed_9_2_prev,arrayed_9_1_prev,arrayed_9_0_prev,arrayed_10_2_prev,arrayed_10_1_prev,arrayed_10_0_prev,arrayed_11_2_prev,arrayed_11_1_prev,arrayed_11_0_prev,arrayed_12_2_prev,arrayed_12_1_prev,arrayed_12_0_prev,arrayed_13_2_prev,arrayed_13_1_prev,arrayed_13_0_prev,arrayed_14_2_prev,arrayed_14_1_prev,arrayed_14_0_prev,arrayed_15_2_prev,arrayed_15_1_prev,arrayed_15_0_prev,arrayed_16_2_prev,arrayed_16_1_prev,arrayed_16_0_prev,arrayed_17_2_prev,arrayed_17_1_prev,arrayed_17_0_prev,arrayed_18_2_prev,arrayed_18_1_prev,arrayed_18_0_prev,arrayed_19_2_prev,arrayed_19_1_prev,arrayed_19_0_prev,arrayed_20_2_prev,arrayed_20_1_prev,arrayed_20_0_prev,arrayed_21_2_prev,arrayed_21_1_prev,arrayed_21_0_prev,arrayed_22_2_prev,arrayed_22_1_prev,arrayed_22_0_prev,arrayed_23_2_prev,arrayed_23_1_prev,arrayed_23_0_prev,arrayed_24_2_prev,arrayed_24_1_prev,arrayed_24_0_prev,led0_prev,led1_prev,led2_prev,led3_prev);
`endif
	if (
		( led0_expected_prev !== 1'bx ) && ( led0_prev !== led0_expected_prev )
		&& ((led0_expected_prev !== last_led0_exp) ||
			on_first_change[76])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port led0 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", led0_expected_prev);
		$display ("     Real value = %b", led0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[76] = 1'b0;
		last_led0_exp = led0_expected_prev;
	end
	if (
		( led1_expected_prev !== 1'bx ) && ( led1_prev !== led1_expected_prev )
		&& ((led1_expected_prev !== last_led1_exp) ||
			on_first_change[77])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port led1 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", led1_expected_prev);
		$display ("     Real value = %b", led1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[77] = 1'b0;
		last_led1_exp = led1_expected_prev;
	end
	if (
		( led2_expected_prev !== 1'bx ) && ( led2_prev !== led2_expected_prev )
		&& ((led2_expected_prev !== last_led2_exp) ||
			on_first_change[78])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port led2 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", led2_expected_prev);
		$display ("     Real value = %b", led2_prev);
		nummismatches = nummismatches + 1;
		on_first_change[78] = 1'b0;
		last_led2_exp = led2_expected_prev;
	end
	if (
		( led3_expected_prev !== 1'bx ) && ( led3_prev !== led3_expected_prev )
		&& ((led3_expected_prev !== last_led3_exp) ||
			on_first_change[79])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port led3 :: @time = %t",  $realtime);
		$display ("     Expected value = %b", led3_expected_prev);
		$display ("     Real value = %b", led3_prev);
		nummismatches = nummismatches + 1;
		on_first_change[79] = 1'b0;
		last_led3_exp = led3_expected_prev;
	end

	trigger <= ~trigger;
end
initial 

begin 
$timeformat(-12,3," ps",6);
#400000;
if (nummismatches > 0)
	$display ("%d mismatched vectors : Simulation failed !",nummismatches);
else
	$display ("Simulation passed !");
$finish;
end 
endmodule

module genius_knockoff_vlg_vec_tst();
// constants                                           
// general purpose registers
reg btn0;
reg btn1;
reg btn2;
reg btn3;
reg clk;
reg rst;
// wires                                               
wire arrayed_0_2;
wire arrayed_0_1;
wire arrayed_0_0;
wire arrayed_1_2;
wire arrayed_1_1;
wire arrayed_1_0;
wire arrayed_2_2;
wire arrayed_2_1;
wire arrayed_2_0;
wire arrayed_3_2;
wire arrayed_3_1;
wire arrayed_3_0;
wire arrayed_4_2;
wire arrayed_4_1;
wire arrayed_4_0;
wire arrayed_5_2;
wire arrayed_5_1;
wire arrayed_5_0;
wire arrayed_6_2;
wire arrayed_6_1;
wire arrayed_6_0;
wire arrayed_7_2;
wire arrayed_7_1;
wire arrayed_7_0;
wire arrayed_8_2;
wire arrayed_8_1;
wire arrayed_8_0;
wire arrayed_9_2;
wire arrayed_9_1;
wire arrayed_9_0;
wire arrayed_10_2;
wire arrayed_10_1;
wire arrayed_10_0;
wire arrayed_11_2;
wire arrayed_11_1;
wire arrayed_11_0;
wire arrayed_12_2;
wire arrayed_12_1;
wire arrayed_12_0;
wire arrayed_13_2;
wire arrayed_13_1;
wire arrayed_13_0;
wire arrayed_14_2;
wire arrayed_14_1;
wire arrayed_14_0;
wire arrayed_15_2;
wire arrayed_15_1;
wire arrayed_15_0;
wire arrayed_16_2;
wire arrayed_16_1;
wire arrayed_16_0;
wire arrayed_17_2;
wire arrayed_17_1;
wire arrayed_17_0;
wire arrayed_18_2;
wire arrayed_18_1;
wire arrayed_18_0;
wire arrayed_19_2;
wire arrayed_19_1;
wire arrayed_19_0;
wire arrayed_20_2;
wire arrayed_20_1;
wire arrayed_20_0;
wire arrayed_21_2;
wire arrayed_21_1;
wire arrayed_21_0;
wire arrayed_22_2;
wire arrayed_22_1;
wire arrayed_22_0;
wire arrayed_23_2;
wire arrayed_23_1;
wire arrayed_23_0;
wire arrayed_24_2;
wire arrayed_24_1;
wire arrayed_24_0;
wire led0;
wire led1;
wire led2;
wire led3;

wire sampler;                             

// assign statements (if any)                          
genius_knockoff i1 (
// port map - connection between master ports and signals/registers   
	.arrayed_0_2(arrayed_0_2),
	.arrayed_0_1(arrayed_0_1),
	.arrayed_0_0(arrayed_0_0),
	.arrayed_1_2(arrayed_1_2),
	.arrayed_1_1(arrayed_1_1),
	.arrayed_1_0(arrayed_1_0),
	.arrayed_2_2(arrayed_2_2),
	.arrayed_2_1(arrayed_2_1),
	.arrayed_2_0(arrayed_2_0),
	.arrayed_3_2(arrayed_3_2),
	.arrayed_3_1(arrayed_3_1),
	.arrayed_3_0(arrayed_3_0),
	.arrayed_4_2(arrayed_4_2),
	.arrayed_4_1(arrayed_4_1),
	.arrayed_4_0(arrayed_4_0),
	.arrayed_5_2(arrayed_5_2),
	.arrayed_5_1(arrayed_5_1),
	.arrayed_5_0(arrayed_5_0),
	.arrayed_6_2(arrayed_6_2),
	.arrayed_6_1(arrayed_6_1),
	.arrayed_6_0(arrayed_6_0),
	.arrayed_7_2(arrayed_7_2),
	.arrayed_7_1(arrayed_7_1),
	.arrayed_7_0(arrayed_7_0),
	.arrayed_8_2(arrayed_8_2),
	.arrayed_8_1(arrayed_8_1),
	.arrayed_8_0(arrayed_8_0),
	.arrayed_9_2(arrayed_9_2),
	.arrayed_9_1(arrayed_9_1),
	.arrayed_9_0(arrayed_9_0),
	.arrayed_10_2(arrayed_10_2),
	.arrayed_10_1(arrayed_10_1),
	.arrayed_10_0(arrayed_10_0),
	.arrayed_11_2(arrayed_11_2),
	.arrayed_11_1(arrayed_11_1),
	.arrayed_11_0(arrayed_11_0),
	.arrayed_12_2(arrayed_12_2),
	.arrayed_12_1(arrayed_12_1),
	.arrayed_12_0(arrayed_12_0),
	.arrayed_13_2(arrayed_13_2),
	.arrayed_13_1(arrayed_13_1),
	.arrayed_13_0(arrayed_13_0),
	.arrayed_14_2(arrayed_14_2),
	.arrayed_14_1(arrayed_14_1),
	.arrayed_14_0(arrayed_14_0),
	.arrayed_15_2(arrayed_15_2),
	.arrayed_15_1(arrayed_15_1),
	.arrayed_15_0(arrayed_15_0),
	.arrayed_16_2(arrayed_16_2),
	.arrayed_16_1(arrayed_16_1),
	.arrayed_16_0(arrayed_16_0),
	.arrayed_17_2(arrayed_17_2),
	.arrayed_17_1(arrayed_17_1),
	.arrayed_17_0(arrayed_17_0),
	.arrayed_18_2(arrayed_18_2),
	.arrayed_18_1(arrayed_18_1),
	.arrayed_18_0(arrayed_18_0),
	.arrayed_19_2(arrayed_19_2),
	.arrayed_19_1(arrayed_19_1),
	.arrayed_19_0(arrayed_19_0),
	.arrayed_20_2(arrayed_20_2),
	.arrayed_20_1(arrayed_20_1),
	.arrayed_20_0(arrayed_20_0),
	.arrayed_21_2(arrayed_21_2),
	.arrayed_21_1(arrayed_21_1),
	.arrayed_21_0(arrayed_21_0),
	.arrayed_22_2(arrayed_22_2),
	.arrayed_22_1(arrayed_22_1),
	.arrayed_22_0(arrayed_22_0),
	.arrayed_23_2(arrayed_23_2),
	.arrayed_23_1(arrayed_23_1),
	.arrayed_23_0(arrayed_23_0),
	.arrayed_24_2(arrayed_24_2),
	.arrayed_24_1(arrayed_24_1),
	.arrayed_24_0(arrayed_24_0),
	.btn0(btn0),
	.btn1(btn1),
	.btn2(btn2),
	.btn3(btn3),
	.clk(clk),
	.led0(led0),
	.led1(led1),
	.led2(led2),
	.led3(led3),
	.rst(rst)
);

// clk
initial
begin
	clk = 1'b1;
	# 5000;
	repeat(39)
	begin
		clk = 1'b0;
		clk = #5000 1'b1;
		# 5000;
	end
	clk = 1'b0;
end 

// rst
initial
begin
	rst = 1'b1;
	rst = #10000 1'b0;
end 

// btn0
initial
begin
	btn0 = 1'b0;
	btn0 = #150000 1'b1;
	btn0 = #10000 1'b0;
end 

// btn1
initial
begin
	btn1 = 1'b0;
	btn1 = #210000 1'b1;
	btn1 = #10000 1'b0;
end 

// btn2
initial
begin
	btn2 = 1'b0;
	btn2 = #170000 1'b1;
	btn2 = #10000 1'b0;
	btn2 = #50000 1'b1;
	btn2 = #10000 1'b0;
end 

// btn3
initial
begin
	btn3 = 1'b0;
	btn3 = #190000 1'b1;
	btn3 = #10000 1'b0;
end 

genius_knockoff_vlg_sample_tst tb_sample (
	.btn0(btn0),
	.btn1(btn1),
	.btn2(btn2),
	.btn3(btn3),
	.clk(clk),
	.rst(rst),
	.sampler_tx(sampler)
);

genius_knockoff_vlg_check_tst tb_out(
	.arrayed_0_2(arrayed_0_2),
	.arrayed_0_1(arrayed_0_1),
	.arrayed_0_0(arrayed_0_0),
	.arrayed_1_2(arrayed_1_2),
	.arrayed_1_1(arrayed_1_1),
	.arrayed_1_0(arrayed_1_0),
	.arrayed_2_2(arrayed_2_2),
	.arrayed_2_1(arrayed_2_1),
	.arrayed_2_0(arrayed_2_0),
	.arrayed_3_2(arrayed_3_2),
	.arrayed_3_1(arrayed_3_1),
	.arrayed_3_0(arrayed_3_0),
	.arrayed_4_2(arrayed_4_2),
	.arrayed_4_1(arrayed_4_1),
	.arrayed_4_0(arrayed_4_0),
	.arrayed_5_2(arrayed_5_2),
	.arrayed_5_1(arrayed_5_1),
	.arrayed_5_0(arrayed_5_0),
	.arrayed_6_2(arrayed_6_2),
	.arrayed_6_1(arrayed_6_1),
	.arrayed_6_0(arrayed_6_0),
	.arrayed_7_2(arrayed_7_2),
	.arrayed_7_1(arrayed_7_1),
	.arrayed_7_0(arrayed_7_0),
	.arrayed_8_2(arrayed_8_2),
	.arrayed_8_1(arrayed_8_1),
	.arrayed_8_0(arrayed_8_0),
	.arrayed_9_2(arrayed_9_2),
	.arrayed_9_1(arrayed_9_1),
	.arrayed_9_0(arrayed_9_0),
	.arrayed_10_2(arrayed_10_2),
	.arrayed_10_1(arrayed_10_1),
	.arrayed_10_0(arrayed_10_0),
	.arrayed_11_2(arrayed_11_2),
	.arrayed_11_1(arrayed_11_1),
	.arrayed_11_0(arrayed_11_0),
	.arrayed_12_2(arrayed_12_2),
	.arrayed_12_1(arrayed_12_1),
	.arrayed_12_0(arrayed_12_0),
	.arrayed_13_2(arrayed_13_2),
	.arrayed_13_1(arrayed_13_1),
	.arrayed_13_0(arrayed_13_0),
	.arrayed_14_2(arrayed_14_2),
	.arrayed_14_1(arrayed_14_1),
	.arrayed_14_0(arrayed_14_0),
	.arrayed_15_2(arrayed_15_2),
	.arrayed_15_1(arrayed_15_1),
	.arrayed_15_0(arrayed_15_0),
	.arrayed_16_2(arrayed_16_2),
	.arrayed_16_1(arrayed_16_1),
	.arrayed_16_0(arrayed_16_0),
	.arrayed_17_2(arrayed_17_2),
	.arrayed_17_1(arrayed_17_1),
	.arrayed_17_0(arrayed_17_0),
	.arrayed_18_2(arrayed_18_2),
	.arrayed_18_1(arrayed_18_1),
	.arrayed_18_0(arrayed_18_0),
	.arrayed_19_2(arrayed_19_2),
	.arrayed_19_1(arrayed_19_1),
	.arrayed_19_0(arrayed_19_0),
	.arrayed_20_2(arrayed_20_2),
	.arrayed_20_1(arrayed_20_1),
	.arrayed_20_0(arrayed_20_0),
	.arrayed_21_2(arrayed_21_2),
	.arrayed_21_1(arrayed_21_1),
	.arrayed_21_0(arrayed_21_0),
	.arrayed_22_2(arrayed_22_2),
	.arrayed_22_1(arrayed_22_1),
	.arrayed_22_0(arrayed_22_0),
	.arrayed_23_2(arrayed_23_2),
	.arrayed_23_1(arrayed_23_1),
	.arrayed_23_0(arrayed_23_0),
	.arrayed_24_2(arrayed_24_2),
	.arrayed_24_1(arrayed_24_1),
	.arrayed_24_0(arrayed_24_0),
	.led0(led0),
	.led1(led1),
	.led2(led2),
	.led3(led3),
	.sampler_rx(sampler)
);
endmodule

